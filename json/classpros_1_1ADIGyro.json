{
  "abstract": false,
  "anchor": "",
  "baseClasses": [
    {
      "external": false,
      "name": "ADIPort",
      "privateAttributes": [
        {
          "abstract": false,
          "anchor": "#variable-_smart_port",
          "category": "attributes",
          "const": false,
          "definition": "std::uint8_t _smart_port",
          "explicit": false,
          "fullname": "pros::ADIPort::_smart_port",
          "hasDetails": false,
          "inline": false,
          "kind": "variable",
          "location": {
            "bodyFile": "pros/adi.hpp",
            "bodyStart": 108,
            "column": 14,
            "file": "pros/adi.hpp",
            "line": 108
          },
          "name": "_smart_port",
          "override": false,
          "refid": "classpros_1_1ADIPort_1a44a445eef95291c2673e57ed31106dd4",
          "static": false,
          "strong": false,
          "title": "_smart_port",
          "type": "std::uint8_t",
          "typePlain": "std::uint8_t",
          "url": "classpros_1_1ADIPort.md#variable-_smart_port",
          "visibility": "private"
        },
        {
          "abstract": false,
          "anchor": "#variable-_adi_port",
          "category": "attributes",
          "const": false,
          "definition": "std::uint8_t _adi_port",
          "explicit": false,
          "fullname": "pros::ADIPort::_adi_port",
          "hasDetails": false,
          "inline": false,
          "kind": "variable",
          "location": {
            "bodyFile": "pros/adi.hpp",
            "bodyStart": 109,
            "column": 14,
            "file": "pros/adi.hpp",
            "line": 109
          },
          "name": "_adi_port",
          "override": false,
          "refid": "classpros_1_1ADIPort_1a4140268936472c65e97796860c95cc4a",
          "static": false,
          "strong": false,
          "title": "_adi_port",
          "type": "std::uint8_t",
          "typePlain": "std::uint8_t",
          "url": "classpros_1_1ADIPort.md#variable-_adi_port",
          "visibility": "private"
        }
      ],
      "publicFunctions": [
        {
          "abstract": false,
          "anchor": "#function-adiport",
          "argsString": "(std::uint8_t adi_port, adi_port_config_e_t type=E_ADI_TYPE_UNDEFINED)",
          "brief": "Configures an ADI port to act as a given sensor type. ",
          "category": "functions",
          "const": false,
          "default": false,
          "definition": "ADIPort",
          "deleted": false,
          "details": "This function uses the following values of errno when an error state is reached: ENXIO - Either the ADI port value or the smart port value is not within its valid range (ADI port: 1-8, 'a'-'h', or 'A'-'H'; smart port: 1-21).",
          "explicit": true,
          "fullname": "pros::ADIPort::ADIPort",
          "hasDetails": true,
          "inline": false,
          "kind": "function",
          "location": {
            "column": 10,
            "file": "pros/adi.hpp",
            "line": 50
          },
          "name": "ADIPort",
          "override": false,
          "paramList": [
            {
              "name": "adi_port",
              "text": "The ADI port number (from 1-8, 'a'-'h', 'A'-'H') to configure "
            },
            {
              "name": "type",
              "text": "The configuration type for the port "
            }
          ],
          "params": [
            {
              "name": "adi_port",
              "type": "std::uint8_t",
              "typePlain": "std::uint8_t"
            },
            {
              "defval": "[E_ADI_TYPE_UNDEFINED](namespacepros.md#enumvalue-e_adi_type_undefined)",
              "defvalPlain": "E_ADI_TYPE_UNDEFINED",
              "name": "type",
              "type": "adi_port_config_e_t",
              "typePlain": "adi_port_config_e_t"
            }
          ],
          "pureVirtual": false,
          "refid": "classpros_1_1ADIPort_1a538a789ca89bc61ebf5fb95fa723951f",
          "static": false,
          "strong": false,
          "summary": "Configures an ADI port to act as a given sensor type. ",
          "title": "ADIPort",
          "url": "classpros_1_1ADIPort.md#function-adiport",
          "virtual": false,
          "visibility": "public"
        },
        {
          "abstract": false,
          "anchor": "#function-adiport",
          "argsString": "(ext_adi_port_pair_t port_pair, adi_port_config_e_t type=E_ADI_TYPE_UNDEFINED)",
          "brief": "Configures an ADI port on an adi expander to act as a given sensor type. ",
          "category": "functions",
          "const": false,
          "default": false,
          "definition": "ADIPort",
          "deleted": false,
          "details": "This function uses the following values of errno when an error state is reached: ENXIO - Either the ADI port value or the smart port value is not within its valid range (ADI port: 1-8, 'a'-'h', or 'A'-'H'; smart port: 1-21).",
          "explicit": false,
          "fullname": "pros::ADIPort::ADIPort",
          "hasDetails": true,
          "inline": false,
          "kind": "function",
          "location": {
            "column": 1,
            "file": "pros/adi.hpp",
            "line": 66
          },
          "name": "ADIPort",
          "override": false,
          "paramList": [
            {
              "name": "port_pair",
              "text": "The pair of the smart port number (from 1-22) and the ADI port number (from 1-8, 'a'-'h', 'A'-'H') to configure "
            },
            {
              "name": "type",
              "text": "The configuration type for the port "
            }
          ],
          "params": [
            {
              "name": "port_pair",
              "type": "[ext_adi_port_pair_t](namespacepros.md#using-ext_adi_port_pair_t)",
              "typePlain": "ext_adi_port_pair_t"
            },
            {
              "defval": "[E_ADI_TYPE_UNDEFINED](namespacepros.md#enumvalue-e_adi_type_undefined)",
              "defvalPlain": "E_ADI_TYPE_UNDEFINED",
              "name": "type",
              "type": "adi_port_config_e_t",
              "typePlain": "adi_port_config_e_t"
            }
          ],
          "pureVirtual": false,
          "refid": "classpros_1_1ADIPort_1a97ca42fda4089b884e38867a2551d2c2",
          "static": false,
          "strong": false,
          "summary": "Configures an ADI port on an adi expander to act as a given sensor type. ",
          "title": "ADIPort",
          "url": "classpros_1_1ADIPort.md#function-adiport",
          "virtual": false,
          "visibility": "public"
        },
        {
          "abstract": false,
          "anchor": "#function-get_config",
          "argsString": "() const",
          "brief": "Gets the configuration for the given ADI port. ",
          "category": "functions",
          "const": true,
          "default": false,
          "definition": "std::int32_t get_config",
          "deleted": false,
          "explicit": false,
          "fullname": "pros::ADIPort::get_config",
          "hasDetails": true,
          "inline": false,
          "kind": "function",
          "location": {
            "column": 14,
            "file": "pros/adi.hpp",
            "line": 73
          },
          "name": "get_config",
          "override": false,
          "params": [],
          "pureVirtual": false,
          "refid": "classpros_1_1ADIPort_1abc268911f1961b5389b71852e946f729",
          "returns": [
            "The ADI configuration for the given port "
          ],
          "static": false,
          "strong": false,
          "summary": "Gets the configuration for the given ADI port. ",
          "title": "get_config",
          "type": "std::int32_t",
          "typePlain": "std::int32_t",
          "url": "classpros_1_1ADIPort.md#function-get_config",
          "virtual": false,
          "visibility": "public"
        },
        {
          "abstract": false,
          "anchor": "#function-set_config",
          "argsString": "(adi_port_config_e_t type) const",
          "brief": "Configures an ADI port to act as a given sensor type. ",
          "category": "functions",
          "const": true,
          "default": false,
          "definition": "std::int32_t set_config",
          "deleted": false,
          "explicit": false,
          "fullname": "pros::ADIPort::set_config",
          "hasDetails": true,
          "inline": false,
          "kind": "function",
          "location": {
            "column": 14,
            "file": "pros/adi.hpp",
            "line": 91
          },
          "name": "set_config",
          "override": false,
          "paramList": [
            {
              "name": "type",
              "text": "The configuration type for the port"
            }
          ],
          "params": [
            {
              "name": "type",
              "type": "adi_port_config_e_t",
              "typePlain": "adi_port_config_e_t"
            }
          ],
          "pureVirtual": false,
          "refid": "classpros_1_1ADIPort_1ae1418e3d7d46f72ea805789d6e511c50",
          "returns": [
            "1 if the operation was successful or PROS_ERR if the operation failed, setting errno. "
          ],
          "static": false,
          "strong": false,
          "summary": "Configures an ADI port to act as a given sensor type. ",
          "title": "set_config",
          "type": "std::int32_t",
          "typePlain": "std::int32_t",
          "url": "classpros_1_1ADIPort.md#function-set_config",
          "virtual": false,
          "visibility": "public"
        },
        {
          "abstract": false,
          "anchor": "#function-set_value",
          "argsString": "(std::int32_t value) const",
          "brief": "Sets the value for the given ADI port. ",
          "category": "functions",
          "const": true,
          "default": false,
          "definition": "std::int32_t set_value",
          "deleted": false,
          "details": "This only works on ports configured as outputs, and the behavior will change depending on the configuration of the port.",
          "explicit": false,
          "fullname": "pros::ADIPort::set_value",
          "hasDetails": true,
          "inline": false,
          "kind": "function",
          "location": {
            "column": 14,
            "file": "pros/adi.hpp",
            "line": 105
          },
          "name": "set_value",
          "override": false,
          "paramList": [
            {
              "name": "value",
              "text": "The value to set the ADI port to"
            }
          ],
          "params": [
            {
              "name": "value",
              "type": "std::int32_t",
              "typePlain": "std::int32_t"
            }
          ],
          "pureVirtual": false,
          "refid": "classpros_1_1ADIPort_1a833ed782b711495035dae08cfce3e62e",
          "returns": [
            "1 if the operation was successful or PROS_ERR if the operation failed, setting errno. "
          ],
          "static": false,
          "strong": false,
          "summary": "Sets the value for the given ADI port. ",
          "title": "set_value",
          "type": "std::int32_t",
          "typePlain": "std::int32_t",
          "url": "classpros_1_1ADIPort.md#function-set_value",
          "virtual": false,
          "visibility": "public"
        }
      ],
      "refid": "classpros_1_1ADIPort",
      "url": "classpros_1_1ADIPort.md",
      "virtual": "non-virtual",
      "visibility": "private"
    }
  ],
  "category": "classes",
  "const": false,
  "definition": "",
  "explicit": false,
  "fullname": "pros::ADIGyro",
  "hasAdditionalMembers": true,
  "hasDetails": false,
  "includes": "\"adi.hpp\"",
  "inline": false,
  "kind": "class",
  "location": {
    "bodyEnd": 660,
    "bodyFile": "pros/adi.hpp",
    "bodyStart": 582,
    "column": 30,
    "file": "pros/adi.hpp",
    "line": 582
  },
  "name": "pros::ADIGyro",
  "override": false,
  "parent": {
    "anchor": "",
    "brief": "Get the current status of the competition control. ",
    "category": "namespaces",
    "fullname": "pros",
    "kind": "namespace",
    "name": "pros",
    "refid": "namespacepros",
    "summary": "Get the current status of the competition control. ",
    "title": "pros",
    "url": "namespacepros.md",
    "visibility": "public"
  },
  "parentBreadcrumbs": [
    {
      "anchor": "",
      "brief": "Get the current status of the competition control. ",
      "category": "namespaces",
      "fullname": "pros",
      "kind": "namespace",
      "name": "pros",
      "refid": "namespacepros",
      "summary": "Get the current status of the competition control. ",
      "title": "pros",
      "url": "namespacepros.md",
      "visibility": "public"
    }
  ],
  "publicFunctions": [
    {
      "abstract": false,
      "anchor": "#function-adigyro",
      "argsString": "(std::uint8_t adi_port, double multiplier=1)",
      "brief": "Initializes a gyroscope on the given port. ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "ADIGyro",
      "deleted": false,
      "details": "If the given port has not previously been configured as a gyro, then this function starts a 1300ms calibration period.\n\nIt is highly recommended that an [ADIGyro](classpros_1_1ADIGyro.md) object be created in [initialize()](main_8h.md#function-initialize) when the robot is stationary to ensure proper calibration. If an [ADIGyro](classpros_1_1ADIGyro.md) object is declared at the global scope, a hardcoded 1300ms delay at the beginning of initialize will be necessary to ensure that the gyro's returned values are correct at the beginning of autonomous/opcontrol.\n\nThis function uses the following values of errno when an error state is reached: ENXIO - Either the ADI port value or the smart port value is not within its valid range (ADI port: 1-8, 'a'-'h', or 'A'-'H'; smart port: 1-21).",
      "explicit": true,
      "fullname": "pros::ADIGyro::ADIGyro",
      "hasDetails": true,
      "inline": false,
      "kind": "function",
      "location": {
        "column": 10,
        "file": "pros/adi.hpp",
        "line": 606
      },
      "name": "ADIGyro",
      "override": false,
      "paramList": [
        {
          "name": "adi_port",
          "text": "The ADI port to initialize as a gyro (from 1-8, 'a'-'h', 'A'-'H') "
        },
        {
          "name": "multiplier",
          "text": "A scalar value that will be multiplied by the gyro heading value supplied by the ADI "
        }
      ],
      "params": [
        {
          "name": "adi_port",
          "type": "std::uint8_t",
          "typePlain": "std::uint8_t"
        },
        {
          "defval": "1",
          "defvalPlain": "1",
          "name": "multiplier",
          "type": "double",
          "typePlain": "double"
        }
      ],
      "pureVirtual": false,
      "refid": "classpros_1_1ADIGyro_1aced0e2755dfa5514822759da5f37dc46",
      "static": false,
      "strong": false,
      "summary": "Initializes a gyroscope on the given port. ",
      "title": "ADIGyro",
      "url": "classpros_1_1ADIGyro.md#function-adigyro",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-adigyro",
      "argsString": "(ext_adi_port_pair_t port_pair, double multiplier=1)",
      "brief": "Initializes a gyroscope on the given port of an adi expander. ",
      "category": "functions",
      "const": false,
      "default": false,
      "definition": "ADIGyro",
      "deleted": false,
      "details": "If the given port has not previously been configured as a gyro, then this function starts a 1300ms calibration period.\n\nIt is highly recommended that an [ADIGyro](classpros_1_1ADIGyro.md) object be created in [initialize()](main_8h.md#function-initialize) when the robot is stationary to ensure proper calibration. If an [ADIGyro](classpros_1_1ADIGyro.md) object is declared at the global scope, a hardcoded 1300ms delay at the beginning of initialize will be necessary to ensure that the gyro's returned values are correct at the beginning of autonomous/opcontrol.\n\nThis function uses the following values of errno when an error state is reached: ENXIO - Either the ADI port value or the smart port value is not within its valid range (ADI port: 1-8, 'a'-'h', or 'A'-'H'; smart port: 1-21).",
      "explicit": false,
      "fullname": "pros::ADIGyro::ADIGyro",
      "hasDetails": true,
      "inline": false,
      "kind": "function",
      "location": {
        "column": 1,
        "file": "pros/adi.hpp",
        "line": 631
      },
      "name": "ADIGyro",
      "override": false,
      "paramList": [
        {
          "name": "port_pair",
          "text": "The pair of the smart port number (from 1-22) and the ADI port number (from 1-8, 'a'-'h', 'A'-'H') to configure "
        },
        {
          "name": "multiplier",
          "text": "A scalar value that will be multiplied by the gyro heading value supplied by the ADI "
        }
      ],
      "params": [
        {
          "name": "port_pair",
          "type": "[ext_adi_port_pair_t](namespacepros.md#using-ext_adi_port_pair_t)",
          "typePlain": "ext_adi_port_pair_t"
        },
        {
          "defval": "1",
          "defvalPlain": "1",
          "name": "multiplier",
          "type": "double",
          "typePlain": "double"
        }
      ],
      "pureVirtual": false,
      "refid": "classpros_1_1ADIGyro_1ada250543373fa9fe687f5889bdf6365b",
      "static": false,
      "strong": false,
      "summary": "Initializes a gyroscope on the given port of an adi expander. ",
      "title": "ADIGyro",
      "url": "classpros_1_1ADIGyro.md#function-adigyro",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-get_value",
      "argsString": "() const",
      "brief": "Gets the current gyro angle in tenths of a degree. ",
      "category": "functions",
      "const": true,
      "default": false,
      "definition": "double get_value",
      "deleted": false,
      "details": "Unless a multiplier is applied to the gyro, the return value will be a whole number representing the number of degrees of rotation times 10.\n\nThere are 360 degrees in a circle, thus the gyro will return 3600 for one whole rotation.\n\nThis function uses the following values of errno when an error state is reached: ENODEV - The port is not configured as a gyro",
      "explicit": false,
      "fullname": "pros::ADIGyro::get_value",
      "hasDetails": true,
      "inline": false,
      "kind": "function",
      "location": {
        "column": 8,
        "file": "pros/adi.hpp",
        "line": 647
      },
      "name": "get_value",
      "override": false,
      "params": [],
      "pureVirtual": false,
      "refid": "classpros_1_1ADIGyro_1a8487ef9a8abbf5226130e0275ffa5331",
      "returns": [
        "The gyro angle in degrees. "
      ],
      "static": false,
      "strong": false,
      "summary": "Gets the current gyro angle in tenths of a degree. ",
      "title": "get_value",
      "type": "double",
      "typePlain": "double",
      "url": "classpros_1_1ADIGyro.md#function-get_value",
      "virtual": false,
      "visibility": "public"
    },
    {
      "abstract": false,
      "anchor": "#function-reset",
      "argsString": "() const",
      "brief": "Resets the gyroscope value to zero. ",
      "category": "functions",
      "const": true,
      "default": false,
      "definition": "std::int32_t reset",
      "deleted": false,
      "details": "This function uses the following values of errno when an error state is reached: ENODEV - The port is not configured as a gyro",
      "explicit": false,
      "fullname": "pros::ADIGyro::reset",
      "hasDetails": true,
      "inline": false,
      "kind": "function",
      "location": {
        "column": 14,
        "file": "pros/adi.hpp",
        "line": 659
      },
      "name": "reset",
      "override": false,
      "params": [],
      "pureVirtual": false,
      "refid": "classpros_1_1ADIGyro_1ac92589176d26914068b37bb9d6afba7b",
      "returns": [
        "1 if the operation was successful or PROS_ERR if the operation failed, setting errno. "
      ],
      "static": false,
      "strong": false,
      "summary": "Resets the gyroscope value to zero. ",
      "title": "reset",
      "type": "std::int32_t",
      "typePlain": "std::int32_t",
      "url": "classpros_1_1ADIGyro.md#function-reset",
      "virtual": false,
      "visibility": "public"
    }
  ],
  "refid": "classpros_1_1ADIGyro",
  "static": false,
  "strong": false,
  "title": "pros::ADIGyro",
  "url": "classpros_1_1ADIGyro.md",
  "visibility": "public"
}